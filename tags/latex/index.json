[
    {
        "ref": "https://bringsrain.github.io/scratchlogs/latex-proyek-multi-file-dengan-subfiles/",
        "title": "Latex Proyek Multi File Dengan Subfiles",
        "section": "scratchlogs",
        "tags": ["Latex"],
        "date" : "2021.05.05",
        "body": "Admin Magang yang Keseringan Ngetik Latar belakang tulisan bertele-tele kali ini, tidak terlalu penting sebenarnya, hanya untuk semakin mempertele-telakan saja. Sebagai seorang admin magang, salah satu pekerjaan tidak penting yang menjadi jawaban yang tidak saya tanggung adalah mencoba mencari cara untuk mengelola pekerjaan rutin. Akibatnya, banyak pekerjaan-pekerjaan teknis yang terundur, karena harus mempelajari urusan yang lebih tepat jika dikelola oleh manajemen, bukan admin magang seperti saya.\nDalam melakukan pekerjaan yang tidak wajib ini, tentu saja dibutuhkan alat-alat yang saya suka (bukan \u0026ldquo;tepat\u0026rdquo;). LaTex adalah salah satu alat favorit untuk membantu pengetikan sehari-hari.\nKenapa Suka LaTex? Jika diceritakan, harus mundur kira-kira ketahun 2015. Zaman masih berusaha mendapatkan ijazah jurusan Teknik Komputer disalah satu kampus swasta (sampai tulisan ini dimuat masih belum lulus). Kurang beruntung dalam perekonomian, untuk mendukung perkuliahan, saya menggunakan netbook pinjaman dengan prosesor Intel Atom, HP Mini tipenya. Netbook dengan brand HP tersebut saya instalasi sistem operasi Arch Linux, yang dikustom untuk kebutuhan perkuliahan. Dengan spesifikasi mesin yang alakadarnya, menulis laporan atau tugas yang diketik menggunakan software pengolah kata seperti Libre Office dkk. terasa berat, \u0026ldquo;Biar Dilan aja\u0026rdquo;.\nDalam petualangan mencari cinta, eh\u0026hellip;, mencari alat untuk mengetik, bersualah dengan LaTeX. Kompatibel dengan teks editor, walaupun perlu kustomisasi dibeberapa poin agar bisa digunakan oleh pengguna yang tidak terlalu pintar seperti saya, yang penting masalah terselesaikan.\nKenapa Masih Menggunakan LaTex? Kenapa urusannya jadi sampai kesini, bikin semakin bertele-tele saja? Seperti yang sudah diceritakan di atas, itu tahun 2015. Ditahun 2020 saya sudah menggunakan laptop pinjaman dengan spesifikasi mesin yang lebih canggih. Lenovo ideapad 700-15ISK, mesin dengan prosesor core-i7 gen-6, ditanamkan keping RAM sebesar 12GB.\nDengan spesifikasi demikian, \u0026ldquo;Software\u0026rdquo; pengolah kata yang beredar dipasaran pasti bisa berjalan dengan mulus. Hanya saja, kebiasaan (buruk atau baik?) seseorang itu susah luntur. Akibatnya, walaupun tidak mahir, saya masih menggunakan LaTex untuk menyelesaikan pekerjaan pengetikan. \u0026ldquo;Nggak penting banget kan dibahas?\u0026quot;\nSering Lupa Diri Ada momen-momen saat melakukan sesuatu, tanpa sadar jadi keterusan. Begitu juga dengan mengetik. Niat awalnya tidak ingin berpanjang-panjang setelah beberapa baris, lupa diri dan keterusan. Harus bolak-balik saat mengetik sebuah dokumen panjang menggunakan LaTex dalam Vim kadang terasa ribet. Ke-ribet-an ini memunculkan kebutuhan untuk mengelola tulisan dalam beberapa berkas. Karena itu mulailah saya melakukan pencarian tentang proyek LaTex dengan multi-file.\nSetelah menemukan beberapa solusi di dunia maya, saya menyimpulkan solusi yang paling tepat untuk kebutuhan saya saat ini adalah menggunakan Subfiles. Alasannya, dari beberapa solusi, baru cara ini yang saya pahami lebih baik dibanding beberapa cara yang lain. Hiahiahiahiahiahia\u0026hellip;\nCara Menggunakan LaTex Subfiles Struktur Direktori Proyek Contoh yang digunakan dalam tulisan ini adalah salah satu catatan kursus daring yang saya jalani.\nBuat Dokumen Utama Proyek Untuk menggunakan subfiles dalam LaTex, pertama buatlah sebuah dokumen dengan nama main.tex. Dokumen ini akan menjadi dokumen induk seluruh proyek.\ntouch main.tex Atau langsung sunting saja dengan teks editor:\nnvim main.tex Tambahkan paket subfiles pada preamble dokumen.\n\\usepackage{subfiles} Jika menggunakan path tersendiri untuk gambar, maka konfigurasi juga graphicspath yang megarah ke direktori tersebut. Misalnya nama direktorinya adalah img\n\\graphicspath{{img/}} Untuk menyertakan dokumen subfiles ke dalam dokumen utama gunakan command \\subfile.\n\\begin{document} \\subfile{chapters/pengantar-iso-27001.tex} \\subfile{chapters/fase-perencanaan.tex} \\subfile{chapters/manajemen-risiko.tex} \\end{document} Catatan: Sebenarnya tidak harus menggunakan ekstensi .tex pada argumen subfile, contoh di atas karena saya menggunakan tab completion pada editor teks yang lebih memudahkan dibanding harus mengetik sendiri nama berkas tanpa ekstensi.\nBerkas Subfiles Subfiles menggunakan struktur penulisan dokumen LaTex lengkap, artinya ada preamble, dan ada tubuh dokumen. Pada subfile digunakan sintaks documentclass tersendiri, yang merujuk pada dokumen induk.\n\\documentclass[../main.tex]{subfiles} Sedangkan untuk path gambar yang direktorinya sejajar dengan dokumen induk main.tex digunakan command \\subfix\n\\graphicspath{{\\subfix{img/}}} Jika strukturnya dituliskan secara lengkap:\n% preamble \\document[../main.tex]{subfiles} \\graphicspath{{\\subfix{img/}}} % body \\begin{document} % konten \\end{document} Mission Accomplished! Demikian cara saya melakukan pembuatan dokumen LaTex multi-file. Seperti umumnya proyek LaTex, selalu ada pendekatan lain untuk sebuah permasalahan. Mungkin cara di atas tidaklah sempurna. \u0026ldquo;Tetapi hatiku memilikimu sepanjang umurku\u0026rdquo;, by Samsons. Hanya saja, untuk kasus yang saya alami pada proyek contoh, sudah memenuhi kebutuhan.\n"
    }
,
    {
        "ref": "https://bringsrain.github.io/nvim/nvim-ganti-engine-latex-ke-xelatex/",
        "title": "Nvim Ganti Engine Latex Ke Xelatex",
        "section": "nvim",
        "tags": ["Nvim","LaTex"],
        "date" : "2021.04.17",
        "body": "Inkonsistensi Ini adalah penyakit kronis lainnya yang saya idap, selain malas. Setelah melakukan inisiasi nvim yang saya posting pada bulan februari 2021 lalu, sehari-hari saya masih bergantung pada Vim untuk pengeditan LaTex. Setelah beberapa ratus lembar berkas PDF yang dikompilasi dengan LaTex, pagi ini, muncul sebuah perasaan yang kembali \u0026ldquo;menggerayangi\u0026rdquo;. Jiwa bertualang kembali datang.\nZona nyaman yang selalu saya rasakan saat menggunakan Vim tak pernah ditemukan saat menggunakan Nvim. Tidak! Yang salah bukan Nvim. Saya yang kurang menyediakan waktu untuk menyamankan diri dengan doi. Walaupun wanita tidak suka dibanding-bandingkan, tapi memang karakter pria (saya) saja, yang suka mencari kemiripan-kemiripan yang menyenangkan. Dengan alasan ini, saya mulai membandingkan konfigurasi Vim dengan Nvim untuk LaTex.\nBagaimana bisa menikmati jika tidak nyaman. Ada beberapa poin penting yang menjadi faktor kenapa saya selalu lebih nyaman dengan Vim saat mengedit LaTex.\n Konfigurasi engine LaTex yang \u0026ldquo;sedikit\u0026rdquo; lebih pas di Vim dibanding Nvim yang saya miliki. Vim-Latex. Vim-coc.  PdfLaTex Vs XeLaTex Walaupun tulisan saya memang sengaja dibuat dengan bertele-tele, tapi, rasanya terlalu berleha-leha, kalau saya jelaskan semua perbedaan PdfLaTex dengan XeLaTex disini. Kalau memang ingin berleha-leha tentang masalah tersebut, sebaiknya konsultasi saja dengan mesin pencari.\nTerlepas dari heading, maksud saya cuma menjelaskan salah satu perbedaan konfigurasi vimtex pada Vim dengan Nvim yang saya miliki. Selidik punya selidik saya menggunakan XeLaTex pada Vim dan PdfLaTex pada Nvim\nReformasi Demi kenyamanan, perlu rasanya menyamakan lingkungan Vim dengan Nvim. Waktunya memboyong konfigurasi Vim ke Nvim agar sedikit lebih terasa \u0026ldquo;at home\u0026rdquo; saat menggunakan Nvim.\nKonfigurasi vimtex dalam init.vim sebelumnya:\n\u0026#34; Gunakan latexmk sebagai kompilerlet g:vimtex_compiler_latexmk = { \\ \u0026#39;executable\u0026#39; : \u0026#39;latexmk\u0026#39;, \\}\u0026#34; Use Xelatex as compiler enginelet g:vimtex_compiler_latexmk_engines = { \\ \u0026#39;_\u0026#39; : \u0026#39;-pdf\u0026#39;, \\ \u0026#39;pdflatex\u0026#39; : \u0026#39;-pdf\u0026#39;, \\ \u0026#39;lualatex\u0026#39; : \u0026#39;-lualatex\u0026#39;, \\ \u0026#39;xelatex\u0026#39; : \u0026#39;-xelatex\u0026#39;, \\}Ada kesalahan persepsi saat membaca manual vimtex yang menyebabkan konfigurasi seperti di atas. Bisa dibaca dari komentarnya, maksud saya mau atur engine XeLaTex untuk kompiler, pada konfigurasi malah mengaru PdfLaTex sebagai default. Dan blok konfigurasi yang kedua tak lebih hanya sebagai deklarasi engine kompiler yang bisa digunakan. Belum ada konfigurasi kompilernya sendiri yaitu latexmk.\nPerlu reformasi. Saya pecat deklasi engine, dan tambahkan opsi untuk latexmk, atur XeLaTex sebagai engine default. Hapus blok konfigurasi ke-2, edit blok konfigurasi kompiler\n\u0026#34; Use Latexmk as compilerlet g:vimtex_compiler_latexmk = { \\ \u0026#39;executable\u0026#39; : \u0026#39;latexmk\u0026#39;, \\ \u0026#39;options\u0026#39; : [ \\ \u0026#39;-xelatex\u0026#39;, \\ \u0026#39;-shell-escape\u0026#39;, \\ \u0026#39;-file-line-error\u0026#39;, \\ \u0026#39;-synctex=1\u0026#39;, \\ \u0026#39;-interaction=nonstopmode\u0026#39;, \\ ], \\}Penasaran arti blok konfigurasinya? Waktu imsak baru saja masuk disini, rasanya akan menguras energi kalau saya bertele-tele lebih jauh. Terlalu banyak bicara\u0026hellip;, eh\u0026hellip;, menulis mungkin tidak terlalu baik buat puasa saya. Jadi saya sangat menyarankan untuk membaca manual vimtex untuk mengetahui lebih banyak tentang detil konfigurasi di atas. Intinya disini, pada options saya menggunakan XeLaTex sebagai default engine.\nMungkin suatu saat nanti (jangan terlalu percaya), saya buat postingan tentang konfigurasi vimtex.\n"
    }
]
